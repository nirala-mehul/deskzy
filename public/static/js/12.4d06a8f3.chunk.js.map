{"version":3,"sources":["constants.js","symbl.ai/auth/getToken.js","symbl.ai/auth/index.js","ui-component/cards/Skeleton/JobStatus.js","symbl.ai/telephony/pstnConnection.js","views/pages/Telephony/TelephonyStart.js","utils/db/putConnectionDB.js","views/pages/Telephony/AreaChartCard.js","symbl.ai/telephony/stopConnection.js","utils/db/getConnectionDB.js","views/pages/Telephony/TelephonyConnectionStatus.js","utils/db/updateConnectionDB.js","views/pages/Telephony/index.js"],"names":["API","BACKEND_URL","secret","JSON","stringify","type","appId","appSecret","getToken","config","method","url","headers","data","axios","AuthToken","this","token","then","accessToken","a","authToken","getAuthToken","useStyles","makeStyles","cardAction","padding","display","paddingTop","justifyContent","PopularCard","classes","container","spacing","gridSpacing","item","xs","alignItems","zeroMinWidth","variant","height","width","className","console","log","Promise","resolve","reject","setTimeout","eventUrl","resultWebSocketUrl","connectionId","conversationId","TOKEN","payload","operation","endpoint","phoneNumber","phone","dtmf","dmtf","actions","invokeOn","name","parameters","emails","session","Authorization","theme","stepper","fontFamily","textAlign","input","center","button","cursor","signDivider","flexGrow","backButton","marginRight","startButton","marginTop","color","palette","success","dark","instructions","marginBottom","formControl","margin","minWidth","maxWidth","backdrop","zIndex","drawer","StepOne","setPhone","setDMTF","useState","meetingId","setId","meetingPasscode","setPasscode","useEffect","Box","TextField","id","label","value","onChange","e","target","StepThree","setEmails","Autocomplete","multiple","newValue","filter","option","indexOf","options","defaultValue","freeSolo","renderTags","getTagProps","map","index","Chip","renderInput","params","placeholder","HorizontalStepperInput","updateUI","React","activeStep","setActiveStep","setBackdrop","steps","stepContent","Stepper","alternativeLabel","Step","StepLabel","Backdrop","open","CircularProgress","size","disableShrink","length","AnimateButton","IconButton","onClick","pstnConnection","res","callback","completed","post","catch","err","error","putConnectionDB","window","scroll","top","behavior","style","fontSize","Typography","Button","disabled","prevActiveStep","TelephonyStart","toggleShowStatus","MainCard","root","Grid","SubCard","direction","gutterBottom","sx","Container","endIcon","chartData","chart","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","series","card","backgroundColor","secondary","light","content","contentContainer","paddingBottom","fontStyle","fontWeight","AreaChartCard","useTheme","orangeDark","newSupportChart","colors","ApexCharts","exec","Card","CardContent","grey","getConnectionDB","get","none","primaryLight","primary","divider","avatarSuccess","borderRadius","successDark","rotateIcon","animation","avatarError","orange","errorDark","cleanDMTF","split","substr","TelephonyConnectionStatus","isLoading","connections","setConnections","anchorEl","setAnchorEl","handleClose","handleStop","connection","stopConnection","put","Fragment","alignContent","event","currentTarget","Menu","keepMounted","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","pt","i","Tooltip","Divider","CardActions","disableElevation","paper","background","boxShadow","shadows","position","left","transform","text","gridItem","TelephonyAPI","setLoading","showStatus","setShowStatus","v"],"mappings":"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","file":"static/js/12.4d06a8f3.chunk.js","sourcesContent":["export const API = \"https://api.symbl.ai/v1\";\nexport const BACKEND_URL = \"http://localhost:80\";\n","import axios from \"axios\";\n\nvar secret = JSON.stringify({\n  type: \"application\",\n  appId: \"\",\n  appSecret:\"\",\n});\n\nexport default function getToken() {\n  var config = {\n    method: \"post\",\n    url: \"https://api.symbl.ai/oauth2/token:generate\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    data: secret,\n  };\n  return axios(config);\n}\n","import getToken from \"./getToken\";\n\nclass AuthToken {\n  constructor() {\n    this.token = null;\n    getToken().then((data) => (this.token = data.data.accessToken));\n  }\n  async getAuthToken() {\n    if (this.token) return this.token;\n    const data = await getToken();\n    return data.data.accessToken;\n  }\n}\n\nconst authToken = new AuthToken();\n\nexport default async function getAuthToken() {\n  return authToken.getAuthToken();\n}\n","import React from \"react\";\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, CardContent, Grid, Skeleton } from \"@material-ui/core\";\n\n// project imports\nimport { gridSpacing } from \"../../../store/constant\";\n\n// style constant\nconst useStyles = makeStyles({\n  cardAction: {\n    padding: \"10px\",\n    display: \"flex\",\n    paddingTop: 0,\n    justifyContent: \"center\",\n  },\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardContent>\n        <Grid container spacing={gridSpacing}>\n          <Grid item xs={12}>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"space-between\"\n              spacing={gridSpacing}\n            >\n              <Grid item xs zeroMinWidth>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n              <Grid item>\n                <Skeleton variant=\"rect\" height={20} width={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Skeleton variant=\"rect\" height={150} />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  spacing={gridSpacing}\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item xs={6}>\n                    <Skeleton variant=\"rect\" height={20} />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      spacing={gridSpacing}\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item xs zeroMinWidth>\n                        <Skeleton variant=\"rect\" height={20} />\n                      </Grid>\n                      <Grid item>\n                        <Skeleton variant=\"rect\" height={16} width={16} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  spacing={gridSpacing}\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item xs={6}>\n                    <Skeleton variant=\"rect\" height={20} />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      spacing={gridSpacing}\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item xs zeroMinWidth>\n                        <Skeleton variant=\"rect\" height={20} />\n                      </Grid>\n                      <Grid item>\n                        <Skeleton variant=\"rect\" height={16} width={16} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  spacing={gridSpacing}\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item xs={6}>\n                    <Skeleton variant=\"rect\" height={20} />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      spacing={gridSpacing}\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item xs zeroMinWidth>\n                        <Skeleton variant=\"rect\" height={20} />\n                      </Grid>\n                      <Grid item>\n                        <Skeleton variant=\"rect\" height={16} width={16} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  spacing={gridSpacing}\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item xs={6}>\n                    <Skeleton variant=\"rect\" height={20} />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      spacing={gridSpacing}\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item xs zeroMinWidth>\n                        <Skeleton variant=\"rect\" height={20} />\n                      </Grid>\n                      <Grid item>\n                        <Skeleton variant=\"rect\" height={16} width={16} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  spacing={gridSpacing}\n                  justifyContent=\"space-between\"\n                >\n                  <Grid item xs={6}>\n                    <Skeleton variant=\"rect\" height={20} />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      spacing={gridSpacing}\n                      justifyContent=\"space-between\"\n                    >\n                      <Grid item xs zeroMinWidth>\n                        <Skeleton variant=\"rect\" height={20} />\n                      </Grid>\n                      <Grid item>\n                        <Skeleton variant=\"rect\" height={16} width={16} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={6}>\n                <Skeleton variant=\"rect\" height={20} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardContent className={classes.cardAction}>\n        <Skeleton variant=\"rect\" height={25} width={75} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PopularCard;\n","import axios from \"axios\";\nimport { API } from \"../../constants\";\nimport getAuthToken from \"../auth\";\n\n// Response\n// {\n//   \"eventUrl\": \"https://api.symbl.ai/v1/event/771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n//   \"resultWebSocketUrl\": \"wss://api.symbl.ai/events/771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n//   \"connectionId\": \"771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n//   \"conversationId\": \"51356232423\"\n// }\n\nexport default async function pstnConnection({ data, token }) {\n  console.log(data)\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      () =>\n        resolve({\n          eventUrl: \"https://api.symbl.ai/v1/event/771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n          resultWebSocketUrl: \"wss://api.symbl.ai/events/771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n          connectionId: \"771a8757-eff8-4b6c-97cd-64132a7bfc6e\",\n          conversationId: \"51356232423\",\n        }),\n      1000,\n    );\n  });\n  \n  const TOKEN = await getAuthToken();\n\n  const payload = {\n    operation: \"start\",\n    endpoint: {\n      type: \"pstn\",\n      phoneNumber: data.phone,\n      dtmf: data.dmtf, // `,,${DTMF_MEETING_ID}#,,${MEETING_PASSCODE}#`\n    },\n    actions: [\n      {\n        invokeOn: \"stop\",\n        name: \"sendSummaryEmail\",\n        parameters: {\n          emails: [data.emails],\n        },\n      },\n    ],\n    data: {\n      session: {\n        name: \"My Meeting\",\n      },\n    },\n  };\n  var config = {\n    method: \"post\",\n    url: API + \"/endpoint:connect\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${TOKEN}`,\n      \"X-API-KEY\": TOKEN,\n    },\n    data: payload,\n  };\n  return axios(config);\n}\n","import React, { useEffect, useState } from \"react\";\n// material-ui\nimport {\n  Chip,\n  Grid,\n  Box,\n  Button,\n  Container,\n  Step,\n  StepLabel,\n  Stepper,\n  Typography,\n  TextField,\n  IconButton,\n  Backdrop,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\n// import { useSelector } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n// project imports\nimport SubCard from \"../../../ui-component/cards/SubCard\";\nimport MainCard from \"../../../ui-component/cards/MainCard\";\nimport { gridSpacing } from \"../../../store/constant\";\n\nimport AudiotrackRoundedIcon from \"@material-ui/icons/AudiotrackRounded\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport OndemandVideoRoundedIcon from \"@material-ui/icons/OndemandVideoRounded\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport AnimateButton from \"../../../ui-component/extended/AnimateButton\";\n\nimport pstnConnection from \"../../../symbl.ai/telephony/pstnConnection\";\nimport putConnectionDB from \"../../../utils/db/putConnectionDB\";\n\nconst useStyles = makeStyles((theme) => ({\n  stepper: {\n    fontFamily: theme.fontFamily,\n    textAlign: \"center\",\n  },\n  input: {\n    display: \"none\",\n  },\n  center: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  },\n  signDivider: {\n    flexGrow: 1,\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  startButton: {\n    cursor: \"pointer\",\n    textAlign: \"center\",\n    marginTop: 50,\n    color: theme.palette.success.dark,\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n    maxWidth: 500,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\n//==============================|| TELEPHONY ||==============================//\n\nfunction StepOne({ phone, setPhone, dmtf, setDMTF }) {\n  const classes = useStyles();\n  const [meetingId, setId] = useState('');\n  const [meetingPasscode, setPasscode] = useState('');\n\n  useEffect(() => {\n    setDMTF(`,,${meetingId}#,,${meetingPasscode}#`)\n  }, [meetingId, meetingPasscode])\n  return (\n    <Box>\n      <TextField\n        className={classes.formControl}\n        id=\"outlined-basic\"\n        label={ \"phone number\" }\n        variant=\"outlined\"\n        value={phone}\n        onChange={(e) => setPhone(e.target.value)}\n      />\n      \n        <TextField\n          className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Meeting ID\"\n          variant=\"outlined\"\n          value={meetingId}\n          onChange={(e) => setId(e.target.value)}\n        />\n        <TextField\n          className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Meeting Password\"\n          variant=\"outlined\"\n          value={meetingPasscode}\n          onChange={(e) => setPasscode(e.target.value)}\n        />\n    </Box>\n  );\n}\n\nfunction StepThree({ emails, setEmails }) {\n  const classes = useStyles();\n  return (\n    <Autocomplete\n      multiple\n      value={emails}\n      onChange={(e, newValue) =>\n        setEmails([...emails, ...newValue.filter((option) => emails.indexOf(option) === -1)])\n      }\n      id=\"tags-outlined\"\n      options={[]}\n      defaultValue={[]}\n      freeSolo\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n        ))\n      }\n      renderInput={(params) => (\n        <TextField\n          className={classes.formControl}\n          {...params}\n          variant=\"outlined\"\n          label=\"Emails\"\n          placeholder=\"Emails\"\n        />\n      )}\n    />\n  );\n}\n\nfunction HorizontalStepperInput({ updateUI }) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [backdrop, setBackdrop] = React.useState(false);\n\n  //data\n  const type = \"PSTN\"\n  const [phone, setPhone] = React.useState(\"\");\n  const [dmtf, setDMTF] = React.useState(\"\");\n  const [emails, setEmails] = React.useState([]);\n\n  const steps = [\"Add details\", \"Send emails to....\"];\n  const stepContent = [\n    <StepOne\n      phone={phone}\n      setPhone={setPhone}\n      dmtf={dmtf}\n      setDMTF={setDMTF}\n    />,\n    <StepThree emails={emails} setEmails={setEmails} />,\n  ];\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setBackdrop(true);\n    pstnConnection({ data: { type, phone, dmtf, emails }, token: \"token\" }).then((res) => {\n      setActiveStep(0);\n      putConnectionDB({ type, phone, dmtf, emails, ...res }, () =>\n        updateUI({ type, phone, dmtf, emails, ...res }),\n      );\n      setBackdrop(false);\n      window.scroll({ top: 400, behavior: \"smooth\" });\n    });\n  };\n\n  return (\n    <Box className={classes.stepper}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      <Backdrop className={classes.backdrop} open={backdrop}>\n        <CircularProgress color=\"inherit\" size={100} disableShrink />\n      </Backdrop>\n\n      <Box>\n        {activeStep === steps.length ? (\n          <Box className={classes.center}>\n            <AnimateButton>\n              <IconButton aria-label=\"Start\" className={classes.startButton} onClick={handleReset}>\n                <PlayCircleFilledIcon style={{ fontSize: 80 }} />\n              </IconButton>\n            </AnimateButton>\n            <Typography className={classes.instructions}>Start the connection</Typography>\n          </Box>\n        ) : (\n          <Box>\n            <Box className={classes.instructions}>{stepContent[activeStep]}</Box>\n            <Box>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.backButton}\n              >\n                Back\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nconst TelephonyStart = ({ toggleShowStatus, updateUI }) => {\n  const classes = useStyles();\n\n  // const customization = useSelector((state) => state.customization);\n\n  return (\n    <MainCard className={classes.root}>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs={12}>\n          <SubCard>\n            <Grid container direction=\"column\" spacing={1} className={classes.center}>\n              <Grid item>\n                <MuiTypography variant=\"h1\" gutterBottom>\n                  Telephony API\n                </MuiTypography>\n                <MuiTypography sx={{ fontSize: 20 }}>\n                  Create conversations from text like emails / conversations{\" \"}\n                  <AssignmentIcon sx={{ fontSize: 15 }} /> audio files{\" \"}\n                  <AudiotrackRoundedIcon sx={{ fontSize: 15 }} /> or video files{\" \"}\n                  <OndemandVideoRoundedIcon sx={{ fontSize: 15 }} />.\n                </MuiTypography>\n              </Grid>\n              <Grid item>\n                <Container className={classes.button}>\n                  <br />\n                  <br />\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.button}\n                    onClick={() => toggleShowStatus()}\n                    endIcon={<CheckCircleRoundedIcon style={{ fontSize: 20 }} />}\n                  >\n                    Check Status\n                  </Button>\n                  <br />\n                  <br />\n                </Container>\n              </Grid>\n            </Grid>\n          </SubCard>\n        </Grid>\n        <Grid item xs>\n          <SubCard>\n            <HorizontalStepperInput updateUI={updateUI} />\n          </SubCard>\n        </Grid>\n      </Grid>\n    </MainCard>\n  );\n};\n\nexport default TelephonyStart;\n","import axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\n\nexport default function putConnectionDB(data, callback) {\n  let payload = { ...data, completed: 0 };\n  console.log(payload);\n  axios\n    .post(BACKEND_URL + \"/connection\", payload)\n    .then((data) => {\n      callback(data);\n    })\n    .catch((err) => console.error(err));\n}\n","import React from \"react\";\n\n// material-ui\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\n\n// third-party\nimport ApexCharts from \"apexcharts\";\nimport Chart from \"react-apexcharts\";\n\n//-----------------------|| DASHBOARD - BAJAJ AREA CHART ||-----------------------//\n\nconst chartData = {\n  type: \"area\",\n  height: 95,\n  options: {\n    chart: {\n      id: \"support-chart\",\n      sparkline: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 1,\n    },\n    tooltip: {\n      fixed: {\n        enabled: false,\n      },\n      x: {\n        show: false,\n      },\n      y: {\n        title: {\n          formatter: (seriesName) => \"Ticket \",\n        },\n      },\n      marker: {\n        show: false,\n      },\n    },\n  },\n  series: [\n    {\n      data: [0, 1, 1, 5, 3, 4, 2],\n    },\n  ],\n};\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  content: {\n    padding: \"0px !important\",\n  },\n  contentContainer: {\n    padding: \"16px\",\n    paddingBottom: 0,\n    color: \"#fff\",\n  },\n  fontStyle: {\n    fontWeight: 400,\n  },\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst AreaChartCard = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const orangeDark = theme.palette.secondary[800];\n\n  React.useEffect(() => {\n    const newSupportChart = {\n      ...chartData.options,\n      colors: [orangeDark],\n      tooltip: {\n        theme: \"light\",\n      },\n    };\n    ApexCharts.exec(`support-chart`, \"updateOptions\", newSupportChart);\n  }, [orangeDark]);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Grid container className={classes.contentContainer}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\n                  Telephony Conversations\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                  #3\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n              1%\n            </Typography>\n          </Grid>\n        </Grid>\n        <Chart {...chartData} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AreaChartCard;\n","import axios from \"axios\";\nimport { API } from \"../../constants\";\nimport getAuthToken from \"../auth\";\n\nexport default async function stopConnection({ data, token }) {\n  // return new Promise((resolve, reject) => {\n  //   setTimeout(() => resolve({}), 1000);\n  // });\n  const TOKEN = await getAuthToken();\n  const payload = {\n    operation: \"stop\",\n    connectionId: data.connectionId,\n  };\n  var config = {\n    method: \"post\",\n    url: API + \"/endpoint:connect\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${TOKEN}`,\n      \"X-API-KEY\": TOKEN,\n    },\n    data: payload,\n  };\n  return axios(config);\n}\n","import axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\n\nexport function getConnectionDB(callback) {\n  axios\n    .get(BACKEND_URL + \"/connection\")\n    .then((res) => {\n      callback(res.data);\n    })\n    .catch((err) => console.error(err));\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Button,\n  IconButton,\n  CardActions,\n  CardContent,\n  Divider,\n  Grid,\n  Menu,\n  MenuItem,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\n\n// project imports\nimport MainCard from \"../../../ui-component/cards/MainCard\";\nimport SkeletonJobStatus from \"../../../ui-component/cards/Skeleton/JobStatus\";\nimport { gridSpacing } from \"../../../store/constant\";\n\n// assets\nimport ChevronRightOutlinedIcon from \"@material-ui/icons/ChevronRightOutlined\";\nimport MoreHorizOutlinedIcon from \"@material-ui/icons/MoreHorizOutlined\";\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport CachedRoundedIcon from \"@material-ui/icons/CachedRounded\";\nimport StopCircleRoundedIcon from \"@material-ui/icons/StopCircleRounded\";\nimport AreaChartCard from \"./AreaChartCard\";\nimport stopConnection from \"../../../symbl.ai/telephony/stopConnection\";\nimport { updateConnectionDB } from \"../../../utils/db/updateConnectionDB\";\nimport { getConnectionDB } from \"../../../utils/db/getConnectionDB\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  none: {},\n  cardAction: {\n    padding: \"10px\",\n    paddingTop: 0,\n    justifyContent: \"center\",\n  },\n  primaryLight: {\n    color: theme.palette.primary[200],\n    cursor: \"pointer\",\n  },\n  divider: {\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n  },\n  center: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  avatarSuccess: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"5px\",\n    backgroundColor: \"transparent\",\n    color: theme.palette.success.dark,\n    marginRight: \"15px\",\n  },\n  successDark: {\n    color: theme.palette.success.dark,\n    cursor: \"unset\",\n  },\n  rotateIcon: {\n    animation: \"spin 4s linear infinite\",\n  },\n  avatarError: {\n    width: \"16px\",\n    height: \"16px\",\n    borderRadius: \"5px\",\n    backgroundColor: \"transparent\",\n    color: theme.palette.orange.dark,\n    marginRight: \"15px\",\n  },\n  errorDark: {\n    color: theme.palette.orange.dark,\n    cursor: \"unset\",\n  },\n}));\n\nfunction cleanDMTF(dmtf) {\n  try {\n    const id = dmtf.split(',')[2];\n    return id.substr(0, id.length-1);\n  } catch (error) {\n    return dmtf;\n  }\n}\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst TelephonyConnectionStatus = ({ isLoading, connections, setConnections }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRefresh = (connection) => {\n    getConnectionDB((data) => setConnections(data));\n  };\n\n  const handleStop = (connection) => {\n    stopConnection({ data: connection })\n      .then(() => {\n        updateConnectionDB(connection, () => getConnectionDB((data) => setConnections(data)));\n      })\n      .catch((err) => console.error(err));\n  };\n  return (\n    <React.Fragment>\n      {isLoading ? (\n        <SkeletonJobStatus />\n      ) : (\n        <MainCard content={false}>\n          <CardContent>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12}>\n                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                  <Grid item>\n                    <Typography variant=\"h4\">Check Connectoin Status</Typography>\n                  </Grid>\n                  <Grid item>\n                    <MoreHorizOutlinedIcon\n                      fontSize=\"small\"\n                      className={classes.primaryLight}\n                      aria-controls=\"menu-popular-card\"\n                      aria-haspopup=\"true\"\n                      onClick={handleClick}\n                    />\n                    <Menu\n                      id=\"menu-popular-card\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      onClose={handleClose}\n                      variant=\"selectedMenu\"\n                      anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"right\",\n                      }}\n                      transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                      }}\n                    >\n                      <MenuItem onClick={handleClose}> Today</MenuItem>\n                      <MenuItem onClick={handleClose}> This Month</MenuItem>\n                      <MenuItem onClick={handleClose}> This Year </MenuItem>\n                    </Menu>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sx={{ pt: \"16px !important\" }}>\n                <AreaChartCard />\n              </Grid>\n              <Grid item xs={12}>\n                {connections.map((e, i) => {\n                  return (\n                    <div key={i}>\n                      <Grid container direction=\"column\">\n                        <Grid item>\n                          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                              <Typography variant=\"h5\" color=\"inherit\">\n                                <strong>{e.type}</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #{\" \"}\n                                {e.phone} &nbsp;&nbsp; {e.type === \"PSTN\" ? cleanDMTF(e.dmtf) : \"\"}\n                              </Typography>\n                            </Grid>\n                            <Grid item>\n                              <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                {!e.completed && <Grid item marginRight={10}></Grid> && (\n                                  <Grid item marginRight={10} className={classes.center}>\n                                    <Tooltip title=\"Stop\">\n                                      <IconButton onClick={() => handleStop(e)}>\n                                        <StopCircleRoundedIcon fontSize=\"medium\" color=\"error\" />\n                                      </IconButton>\n                                    </Tooltip>\n                                  </Grid>\n                                )}\n                                <Grid item>\n                                  {e.completed ? (\n                                    <Tooltip title=\"Completed\">\n                                      <IconButton className={classes.successDark}>\n                                        <CheckRoundedIcon fontSize=\"medium\" color=\"inherit\" />\n                                      </IconButton>\n                                    </Tooltip>\n                                  ) : (\n                                    <Tooltip title=\"Pending\">\n                                      <IconButton className={classes.errorDark}>\n                                        <HourglassEmptyIcon fontSize=\"medium\" />\n                                      </IconButton>\n                                    </Tooltip>\n                                  )}\n                                </Grid>\n                                <Grid item>\n                                  <Tooltip title=\"Refresh\">\n                                    <IconButton color=\"primary\" onClick={() => handleRefresh(e)}>\n                                      <CachedRoundedIcon\n                                        fontSize=\"medium\"\n                                        color=\"inherit\"\n                                        className={isLoading ? classes.rotateIcon : classes.none}\n                                      />\n                                      <style>{`@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); }}`}</style>\n                                    </IconButton>\n                                  </Tooltip>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid item>\n                          <Typography variant=\"subtitle2\" className={classes.successDark}>\n                            <strong>Conversation ID: </strong> {e.conversationId}\n                          </Typography>\n                          <Typography variant=\"h6\" color=\"inherit\">\n                            <strong>Connection ID:</strong> {e.connectionId}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                      {i !== connections.length - 1 ? <Divider className={classes.divider} /> : \"\"}\n                    </div>\n                  );\n                })}\n              </Grid>\n            </Grid>\n          </CardContent>\n          <CardActions className={classes.cardAction}>\n            <Button size=\"small\" disableElevation>\n              View All\n              <ChevronRightOutlinedIcon />\n            </Button>\n          </CardActions>\n        </MainCard>\n      )}\n    </React.Fragment>\n  );\n};\n\nTelephonyConnectionStatus.propTypes = {\n  isLoading: PropTypes.bool,\n};\n\nexport default TelephonyConnectionStatus;\n","import axios from \"axios\";\nimport { BACKEND_URL } from \"../../constants\";\n\nexport function updateConnectionDB(data, callback) {\n  axios\n    .put(BACKEND_URL + \"/connection\", data)\n    .then((res) => {\n      callback(res.data);\n    })\n    .catch((err) => console.error(err));\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport TelephonyStart from \"./TelephonyStart\";\nimport TelephonyConnectionStatus from \"./TelephonyConnectionStatus\";\nimport { gridSpacing } from \"../../../store/constant\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { getConnectionDB } from \"../../../utils/db/getConnectionDB\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    textAlign: \"center\",\n    position: \"absolute\",\n    maxWidth: 700,\n    left: \"50%\",\n    top: \"40%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  center: {\n    textAlign: \"center\",\n  },\n  text: {\n    fontWeight: \"bold\",\n    padding: 5,\n  },\n  button: {\n    marginTop: 25,\n  },\n  divider: {\n    marginTop: \"12px\",\n    marginBottom: \"12px\",\n  },\n  gridItem: {\n    minWidth: \"700px\",\n  },\n}));\n\n//==============================|| ASYNC ||==============================//\n\nconst TelephonyAPI = () => {\n  const classes = useStyles();\n\n  const [isLoading, setLoading] = useState(true);\n  const [showStatus, setShowStatus] = useState(false);\n  const [connections, setConnections] = useState([]);\n\n  useEffect(() => {\n    getConnectionDB((data) => setConnections(data));\n    setLoading(false);\n  }, []);\n\n  return (\n    <>\n      <Grid container spacing={gridSpacing}>\n        <Grid item xs className={classes.gridItem}>\n          <TelephonyStart\n            isLoading={isLoading}\n            toggleShowStatus={() => setShowStatus(!showStatus)}\n            updateUI={(v) => setConnections([...connections, v])}\n          />\n        </Grid>\n        <Grid item xs className={classes.gridItem} display={showStatus ? \"\" : \"none\"}>\n          <TelephonyConnectionStatus\n            isLoading={isLoading}\n            connections={connections}\n            setConnections={setConnections}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TelephonyAPI;\n"],"sourceRoot":""}